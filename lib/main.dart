import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart'; // Import Firebase Core
import 'package:provider/provider.dart'; // Import Provider
import 'firebase_options.dart'; // Import Firebase Options (generated by FlutterFire CLI)
import 'package:flutter_localizations/flutter_localizations.dart'; // Added for GlobalMaterialLocalizations
import 'package:sadhak/l10n/app_localizations.dart'; // Added for AppLocalizations

// Import your models and the AuthGate
import 'auth_gate.dart';
import 'auth_service.dart'; // Import AuthService
import 'isar_service.dart'; // Import IsarService
// Added prefix
// import 'database_seeder.dart'; // Commented out as DatabaseSeeder is not defined correctly

// HomeScreen is not directly needed as home now, AuthGate will handle it.

Future<void> main() async {
  // Ensure Flutter is initialized
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase FIRST
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Initialize IsarService
  final isarService = IsarService();
  // await isarService.init(); // REMOVED: init() method does not exist

  // Seed the database
  // This might need adjustment if it was Hive-dependent
  // Ensure DatabaseSeeder does not depend on a context that isn't available yet
  // or on services that are not yet initialized if it uses them.
  // If DatabaseSeeder needs IsarService, it should be passed or accessed after provider setup if it were a widget.
  // For now, assuming it can run independently or with the created isarService instance.
  await isarService.seedDatabase(); // MODIFIED: Call seedDatabase on isarService instance

  runApp(
    MultiProvider(
      providers: [
        Provider<AuthService>(create: (_) => AuthService()),
        Provider<IsarService>.value(value: isarService), // Provide the initialized IsarService
        // Add other providers here if needed
      ],
      child: const MyApp(),
    ),
  );
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Sadhak',
      theme: ThemeData(
        primarySwatch: Colors.green,
        scaffoldBackgroundColor: Colors.white,
      ),
      // Add these lines for localization:
      localizationsDelegates: const [
        AppLocalizations.delegate,
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],
      supportedLocales: const [
        Locale('en', ''), // English, no country code
        Locale('hi', ''), // Hindi, no country code
        // Add other locales your app supports
      ],
      home: const AuthGate(),
    );
  }
}
